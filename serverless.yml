service: attendance-management-bot

provider:
  name: aws
  runtime: python3.9
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  environment:
    BOT_TOKEN: ${env:BOT_TOKEN}
    APP_TOKEN: ${env:APP_TOKEN}
    CUSTOM_AWS_REGION: ${self:provider.region}
    DYNAMODB_ENDPOINT: https://dynamodb.${self:provider.region}.amazonaws.com
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/*"
        - Effect: Allow
          Action:
            - lambda:InvokeFunction
          Resource: "*"

functions:
  app:
    handler: app.main.handler
    events:
      - http:
          path: slack/events
          method: post
    timeout: 29

resources:
  Resources:
    UserSettingsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-${self:provider.stage}-user-settings
        AttributeDefinitions:
          - AttributeName: user_id
            AttributeType: S
          - AttributeName: workspace_id
            AttributeType: S
        KeySchema:
          - AttributeName: user_id
            KeyType: HASH
          - AttributeName: workspace_id
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST

    PunchTimeTableV2:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-${self:provider.stage}-punch-time-v2
        AttributeDefinitions:
          - AttributeName: punch_user_id
            AttributeType: S
          - AttributeName: punch_workspace_id
            AttributeType: S
          - AttributeName: punch_date
            AttributeType: S
        KeySchema:
          - AttributeName: punch_user_id
            KeyType: HASH
          - AttributeName: punch_workspace_id
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: DateIndex
            KeySchema:
              - AttributeName: punch_user_id
                KeyType: HASH
              - AttributeName: punch_date
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST

    BreakTimeTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-${self:provider.stage}-break-time
        AttributeDefinitions:
          - AttributeName: break_id
            AttributeType: S
        KeySchema:
          - AttributeName: break_id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    SchedulesTableV2:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-${self:provider.stage}-schedules-v2
        AttributeDefinitions:
          - AttributeName: user_id
            AttributeType: S
          - AttributeName: workspace_id
            AttributeType: S
          - AttributeName: start_time
            AttributeType: S
        KeySchema:
          - AttributeName: user_id
            KeyType: HASH
          - AttributeName: workspace_id
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: StartTimeIndex
            KeySchema:
              - AttributeName: user_id
                KeyType: HASH
              - AttributeName: start_time
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST

    LeaveRequestsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-${self:provider.stage}-leave-requests
        AttributeDefinitions:
          - AttributeName: user_id
            AttributeType: S
          - AttributeName: request_id
            AttributeType: S
        KeySchema:
          - AttributeName: user_id
            KeyType: HASH
          - AttributeName: request_id
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST

    TasksTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-${self:provider.stage}-tasks
        AttributeDefinitions:
          - AttributeName: user_id
            AttributeType: S
          - AttributeName: task_id
            AttributeType: S
        KeySchema:
          - AttributeName: user_id
            KeyType: HASH
          - AttributeName: task_id
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST

custom:
  pythonRequirements:
    dockerizePip: true

plugins:
  - serverless-python-requirements

package:
  individually: true